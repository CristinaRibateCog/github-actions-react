name: CI
on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "18.12.0"
      - run: npm ci # ~npm install
      - run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v3
        with:
          path: coverage
          name: code-coverage
      - name: Build Project
        if: github.event_name=='push'
        run: npm run build
      - name: Upload Build Folder
        uses: actions/upload-artifact@v3
        if: github.event_name=='push'
        with:
          path: build
          name: build
      - name: ZIP Assets
        if: github.event_name=='push' && github.ref == 'refs/heads/master'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a Release
        if: github.event_name=='push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: pwd
        run: |
          pwd
          ls -a
      - uses: actions/download-artifact@v3
#      - run: npm install -g surge
#      - name: Deploy to Staging
#        if: github.event_name=="push"
#        run: npx surge --project ./build --domain silent-apparatus.surge.sh
#        env:
#          SURGE_LOGIN: ${{secrets.SURGE_LOGIN }}
#          SURGE_TOKEN: ${{secrets.SURGE_TOKEN }}
